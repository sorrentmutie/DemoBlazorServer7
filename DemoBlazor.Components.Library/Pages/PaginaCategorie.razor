@page "/categorie"
@inject ICategorie categoriesService


@if(categoria == null)
{
    <h3>Pagina Categorie</h3>

    <button class="btn btn-info" @onclick="CreaCategoria">Crea Categoria</button>
    <ListaCategorie Categories="categories" OnCategorySelected="CategorySelected" />
} else
{
     <Dettaglio TItem="CategoryDTO" Item="categoria" ItemChanged="Changed" OnCancel="Cancel">
        <FormFields>
            <TextBox Id="Nome" Label="Nome" @bind-Value="categoria.Name"></TextBox>
            <TextBox Id="Desc" Label="Descrizione" @bind-Value="categoria.Description"></TextBox>
        </FormFields>

     </Dettaglio>
}





@code {

    CategoryDTO? categoria;
    private List<CategoryDTO>? categories = new();  

    private void Cancel()
    {
        categoria = null;
    }



    protected override async Task OnInitializedAsync()
    {

        categories = (await categoriesService.GetCategoriesAsync())?.ToList();
    }

    private void CategorySelected(CategoryDTO categoriaSelezionata)
    {
        categoria = categoriaSelezionata;
    }


    private void CreaCategoria()
    {
        categoria = new CategoryDTO { Name = "", Description = "" };
    }

    private async Task Changed(CategoryDTO category)
    {
        // Id == 0 means that the category is new
        // Id != 0 means that the category is being edited
        if(category == null)
        {
            categoria = null;
            return;
        }

        if(category.Id == 0)
        {
            await categoriesService.AddCategory(
                 new CategoryCreateDTO {  Description = category.Description,
                                           Name = category.Name});
        } else
        {
            await categoriesService.UpdateCategory(category);
        }
        categories = (await categoriesService.GetCategoriesAsync())?.ToList();
        categoria = null;
    }

}
